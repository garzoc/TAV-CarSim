<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
broadcast chan sensorChannel, noParkChannel, moveForward, moveBackward, parkChannel, car1Channel, car2Channel, cantMoveChannel;</declaration>
	<template>
		<name>Sensors</name>
		<location id="id0" x="-17" y="153">
		</location>
		<location id="id1" x="-17" y="51">
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-187" y="102">noParkChannel!</label>
			<nail x="-76" y="110"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="59" y="93">sensorChannel?</label>
			<nail x="51" y="110"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Car</name>
		<declaration>// Street position
int position := 0;
// Target parking space
int parkingSpace := -1;
// Direction -- 1 is forward, -1 is backward
int direction := 1;

clock c;
</declaration>
		<location id="id2" x="51" y="272">
		</location>
		<location id="id3" x="17" y="178">
		</location>
		<location id="id4" x="-221" y="8">
		</location>
		<location id="id5" x="-34" y="102">
		</location>
		<location id="id6" x="-102" y="17">
		</location>
		<location id="id7" x="-170" y="-51">
		</location>
		<location id="id8" x="-170" y="-178">
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id2"/>
			<target ref="id8"/>
			<nail x="289" y="272"/>
			<nail x="246" y="-212"/>
			<nail x="-153" y="-212"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="34" y="195">moveForward?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="35" y="161">cantMoveChannel?</label>
			<nail x="221" y="178"/>
			<nail x="187" y="-178"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="0" y="127">moveForward!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-297" y="-42">parkChannel?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-42" y="42">car1Channel!</label>
			<label kind="assignment" x="-59" y="25">c := 0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-136" y="-51">noParkChannel?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-153" y="-127">sensorChannel!</label>
		</transition>
	</template>
	<template>
		<name>Street</name>
		<declaration>// true = empty, false = occupied
bool spaces[5] := {false, true, true, false, false};
int cars[2] := {0,0};
int length := 5;
int x;
//int x := 0;












void flipSpace(int space)
{
    spaces[space] = !spaces[space];
}
</declaration>
		<location id="id9" x="25" y="-25">
		</location>
		<location id="id10" x="0" y="-289">
		</location>
		<location id="id11" x="34" y="127">
		</location>
		<location id="id12" x="119" y="-17">
		</location>
		<location id="id13" x="-76" y="-25">
		</location>
		<location id="id14" x="17" y="-178">
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id13"/>
			<target ref="id9"/>
			<label kind="guard" x="-58" y="-59">cars[x] &lt; 0</label>
			<label kind="synchronisation" x="-25" y="-8">cantMoveChannel!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="42" y="-51">cars[x] &gt;= length</label>
			<label kind="synchronisation" x="-25" y="-8">cantMoveChannel!</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<nail x="-136" y="127"/>
			<nail x="-238" y="127"/>
			<nail x="-238" y="-297"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="102" y="25">cars[x] &lt; length</label>
			<label kind="synchronisation" x="85" y="42">moveForward!</label>
			<label kind="assignment" x="85" y="59">cars[x]++</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="guard" x="-119" y="17">cars[x] &gt;= 0</label>
			<label kind="synchronisation" x="-144" y="42">moveBackward!</label>
			<label kind="assignment" x="-93" y="59">cars[x]--</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="76" y="-119">moveForward?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-153" y="-119">moveBackward?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="76" y="-263">car2Channel?</label>
			<label kind="assignment" x="76" y="-246">x := 1</label>
			<nail x="76" y="-229"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-118" y="-255">car1Channel?</label>
			<label kind="assignment" x="-110" y="-238">x := 0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
CarProcess = Street();
StreetProcess = Car();
SensorProcess = Sensors();

// List one or more processes to be composed into a system.
system CarProcess, StreetProcess, SensorProcess;

</system>
	<queries>
	</queries>
</nta>
